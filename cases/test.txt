class A
{
	int index;
	
	A(int _index)
	{
		int unused = 1;
		index = _index;
		println("A,"+index);
	}
	
	A(A a)
	{
		int unused = 2;
		index = a.index * 10;
		println("A copy, "+a.index+"->"+index);
	}
	
	~A()
	{
		int unused = 3;
		println("~A, "+index);
	}
	
	void operator = (A a)
	{
		int unused = 4;
		index = a.index + 5;
		println("A =, "+a.index+"->"+index);
	}
}

void create_and_destroy()
{
	A a = A(4);
}();

void inside_block()
{
	A a = A(1);
	{
		A b = A(2);
	}
	{
		A c = A(3);
		a = c;
	}
	A d = a;
}();

void copy_operator()
{
	A a = A(20);
	A b = A(a);
}();

void deref(A& a, A& b)
{
	A c = a;
	b = A(30);
}
A a = A(40), b = A(50);
deref(a, b);

pause();
